
//! Autogenerated weights for `pallet_pool_system`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-06-07, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner`, CPU: `AMD EPYC 7763 64-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("centrifuge-local")`, DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=centrifuge-local
// --steps=50
// --repeat=20
// --pallet=pallet_pool_system
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/centrifuge/src/weights/pallet_pool_system.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_pool_system`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_pool_system::WeightInfo for WeightInfo<T> {
	/// Storage: `Permissions::Permission` (r:1 w:0)
	/// Proof: `Permissions::Permission` (`max_values`: None, `max_size`: Some(228), added: 2703, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::Pool` (r:1 w:1)
	/// Proof: `PoolSystem::Pool` (`max_values`: None, `max_size`: Some(813), added: 3288, mode: `MaxEncodedLen`)
	/// The range of component `m` is `[0, 100]`.
	fn set_max_reserve(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `554`
		//  Estimated: `4278`
		// Minimum execution time: 24_495_000 picoseconds.
		Weight::from_parts(25_394_511, 0)
			.saturating_add(Weight::from_parts(0, 4278))
			// Standard Error: 442
			.saturating_add(Weight::from_parts(28_512, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Permissions::Permission` (r:1 w:0)
	/// Proof: `Permissions::Permission` (`max_values`: None, `max_size`: Some(228), added: 2703, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::Pool` (r:1 w:1)
	/// Proof: `PoolSystem::Pool` (`max_values`: None, `max_size`: Some(813), added: 3288, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::EpochExecution` (r:1 w:0)
	/// Proof: `PoolSystem::EpochExecution` (`max_values`: None, `max_size`: Some(754), added: 3229, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Loans::PortfolioValuation` (r:1 w:0)
	/// Proof: `Loans::PortfolioValuation` (`max_values`: None, `max_size`: Some(24050), added: 26525, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::PortfolioValuation` (r:1 w:1)
	/// Proof: `PoolFees::PortfolioValuation` (`max_values`: None, `max_size`: Some(4850), added: 7325, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::AssetsUnderManagement` (r:1 w:1)
	/// Proof: `PoolFees::AssetsUnderManagement` (`max_values`: None, `max_size`: Some(40), added: 2515, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::ActiveFees` (r:1 w:1)
	/// Proof: `PoolFees::ActiveFees` (`max_values`: None, `max_size`: Some(14043), added: 16518, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::TotalIssuance` (r:5 w:0)
	/// Proof: `OrmlTokens::TotalIssuance` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveInvestOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingInvestOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InvestOrderId` (r:5 w:5)
	/// Proof: `Investments::InvestOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::RedeemOrderId` (r:5 w:5)
	/// Proof: `Investments::RedeemOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::Accounts` (r:5 w:0)
	/// Proof: `OrmlTokens::Accounts` (`max_values`: None, `max_size`: Some(129), added: 2604, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ClearedInvestOrders` (r:0 w:5)
	/// Proof: `Investments::ClearedInvestOrders` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ClearedRedeemOrders` (r:0 w:5)
	/// Proof: `Investments::ClearedRedeemOrders` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[1, 100]`.
	fn close_epoch_no_orders(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1216 + m * (124 ±0) + n * (133 ±0)`
		//  Estimated: `27515 + n * (2604 ±0)`
		// Minimum execution time: 436_896_000 picoseconds.
		Weight::from_parts(81_585_373, 0)
			.saturating_add(Weight::from_parts(0, 27515))
			// Standard Error: 123_362
			.saturating_add(Weight::from_parts(71_083_398, 0).saturating_mul(n.into()))
			// Standard Error: 5_697
			.saturating_add(Weight::from_parts(3_386_226, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().reads((8_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(4))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2604).saturating_mul(n.into()))
	}
	/// Storage: `Permissions::Permission` (r:1 w:0)
	/// Proof: `Permissions::Permission` (`max_values`: None, `max_size`: Some(228), added: 2703, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::Pool` (r:1 w:1)
	/// Proof: `PoolSystem::Pool` (`max_values`: None, `max_size`: Some(813), added: 3288, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::EpochExecution` (r:1 w:1)
	/// Proof: `PoolSystem::EpochExecution` (`max_values`: None, `max_size`: Some(754), added: 3229, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Loans::PortfolioValuation` (r:1 w:0)
	/// Proof: `Loans::PortfolioValuation` (`max_values`: None, `max_size`: Some(24050), added: 26525, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::PortfolioValuation` (r:1 w:1)
	/// Proof: `PoolFees::PortfolioValuation` (`max_values`: None, `max_size`: Some(4850), added: 7325, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::AssetsUnderManagement` (r:1 w:1)
	/// Proof: `PoolFees::AssetsUnderManagement` (`max_values`: None, `max_size`: Some(40), added: 2515, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::ActiveFees` (r:1 w:1)
	/// Proof: `PoolFees::ActiveFees` (`max_values`: None, `max_size`: Some(14043), added: 16518, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::TotalIssuance` (r:5 w:0)
	/// Proof: `OrmlTokens::TotalIssuance` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveInvestOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingInvestOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InvestOrderId` (r:5 w:5)
	/// Proof: `Investments::InvestOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::RedeemOrderId` (r:5 w:5)
	/// Proof: `Investments::RedeemOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn close_epoch_no_execution(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1428 + m * (124 ±0) + n * (133 ±0)`
		//  Estimated: `27515 + n * (2531 ±0)`
		// Minimum execution time: 223_157_000 picoseconds.
		Weight::from_parts(91_267_466, 0)
			.saturating_add(Weight::from_parts(0, 27515))
			// Standard Error: 84_017
			.saturating_add(Weight::from_parts(27_905_302, 0).saturating_mul(n.into()))
			// Standard Error: 3_834
			.saturating_add(Weight::from_parts(3_184_077, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(5))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2531).saturating_mul(n.into()))
	}
	/// Storage: `Permissions::Permission` (r:1 w:0)
	/// Proof: `Permissions::Permission` (`max_values`: None, `max_size`: Some(228), added: 2703, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::Pool` (r:1 w:1)
	/// Proof: `PoolSystem::Pool` (`max_values`: None, `max_size`: Some(813), added: 3288, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::EpochExecution` (r:1 w:0)
	/// Proof: `PoolSystem::EpochExecution` (`max_values`: None, `max_size`: Some(754), added: 3229, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Loans::PortfolioValuation` (r:1 w:0)
	/// Proof: `Loans::PortfolioValuation` (`max_values`: None, `max_size`: Some(24050), added: 26525, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::PortfolioValuation` (r:1 w:1)
	/// Proof: `PoolFees::PortfolioValuation` (`max_values`: None, `max_size`: Some(4850), added: 7325, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::AssetsUnderManagement` (r:1 w:1)
	/// Proof: `PoolFees::AssetsUnderManagement` (`max_values`: None, `max_size`: Some(40), added: 2515, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::ActiveFees` (r:1 w:1)
	/// Proof: `PoolFees::ActiveFees` (`max_values`: None, `max_size`: Some(14043), added: 16518, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::TotalIssuance` (r:5 w:1)
	/// Proof: `OrmlTokens::TotalIssuance` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveInvestOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingInvestOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InvestOrderId` (r:5 w:5)
	/// Proof: `Investments::InvestOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::RedeemOrderId` (r:5 w:5)
	/// Proof: `Investments::RedeemOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::Accounts` (r:7 w:3)
	/// Proof: `OrmlTokens::Accounts` (`max_values`: None, `max_size`: Some(129), added: 2604, mode: `MaxEncodedLen`)
	/// Storage: `OrmlAssetRegistry::Metadata` (r:2 w:0)
	/// Proof: `OrmlAssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(942), added: 3417, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ClearedInvestOrders` (r:0 w:5)
	/// Proof: `Investments::ClearedInvestOrders` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ClearedRedeemOrders` (r:0 w:5)
	/// Proof: `Investments::ClearedRedeemOrders` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn close_epoch_execute(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2120 + m * (124 ±0) + n * (167 ±0)`
		//  Estimated: `27515 + n * (2604 ±0)`
		// Minimum execution time: 531_753_000 picoseconds.
		Weight::from_parts(177_037_674, 0)
			.saturating_add(Weight::from_parts(0, 27515))
			// Standard Error: 151_845
			.saturating_add(Weight::from_parts(73_612_531, 0).saturating_mul(n.into()))
			// Standard Error: 6_929
			.saturating_add(Weight::from_parts(3_395_975, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().reads((8_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(10))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2604).saturating_mul(n.into()))
	}
	/// Storage: `PoolSystem::EpochExecution` (r:1 w:1)
	/// Proof: `PoolSystem::EpochExecution` (`max_values`: None, `max_size`: Some(754), added: 3229, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::Pool` (r:1 w:0)
	/// Proof: `PoolSystem::Pool` (`max_values`: None, `max_size`: Some(813), added: 3288, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::ActiveFees` (r:1 w:0)
	/// Proof: `PoolFees::ActiveFees` (`max_values`: None, `max_size`: Some(14043), added: 16518, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn submit_solution(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `821 + m * (124 ±0) + n * (249 ±0)`
		//  Estimated: `17508`
		// Minimum execution time: 39_494_000 picoseconds.
		Weight::from_parts(34_485_549, 0)
			.saturating_add(Weight::from_parts(0, 17508))
			// Standard Error: 33_558
			.saturating_add(Weight::from_parts(1_408_318, 0).saturating_mul(n.into()))
			// Standard Error: 1_531
			.saturating_add(Weight::from_parts(202_749, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Permissions::Permission` (r:1 w:0)
	/// Proof: `Permissions::Permission` (`max_values`: None, `max_size`: Some(228), added: 2703, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::EpochExecution` (r:1 w:1)
	/// Proof: `PoolSystem::EpochExecution` (`max_values`: None, `max_size`: Some(754), added: 3229, mode: `MaxEncodedLen`)
	/// Storage: `PoolSystem::Pool` (r:1 w:1)
	/// Proof: `PoolSystem::Pool` (`max_values`: None, `max_size`: Some(813), added: 3288, mode: `MaxEncodedLen`)
	/// Storage: `PoolFees::ActiveFees` (r:1 w:1)
	/// Proof: `PoolFees::ActiveFees` (`max_values`: None, `max_size`: Some(14043), added: 16518, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingInvestOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::Accounts` (r:7 w:3)
	/// Proof: `OrmlTokens::Accounts` (`max_values`: None, `max_size`: Some(129), added: 2604, mode: `MaxEncodedLen`)
	/// Storage: `OrmlAssetRegistry::Metadata` (r:2 w:0)
	/// Proof: `OrmlAssetRegistry::Metadata` (`max_values`: None, `max_size`: Some(942), added: 3417, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `OrmlTokens::TotalIssuance` (r:1 w:1)
	/// Proof: `OrmlTokens::TotalIssuance` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InvestOrderId` (r:5 w:0)
	/// Proof: `Investments::InvestOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveInvestOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveInvestOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::InProcessingRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::InProcessingRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Investments::RedeemOrderId` (r:5 w:0)
	/// Proof: `Investments::RedeemOrderId` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ActiveRedeemOrders` (r:5 w:5)
	/// Proof: `Investments::ActiveRedeemOrders` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ClearedInvestOrders` (r:0 w:5)
	/// Proof: `Investments::ClearedInvestOrders` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Investments::ClearedRedeemOrders` (r:0 w:5)
	/// Proof: `Investments::ClearedRedeemOrders` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn execute_epoch(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2042 + m * (124 ±0) + n * (633 ±0)`
		//  Estimated: `17508 + n * (2604 ±0)`
		// Minimum execution time: 241_661_000 picoseconds.
		Weight::from_parts(150_024_240, 0)
			.saturating_add(Weight::from_parts(0, 17508))
			// Standard Error: 92_293
			.saturating_add(Weight::from_parts(55_452_128, 0).saturating_mul(n.into()))
			// Standard Error: 4_211
			.saturating_add(Weight::from_parts(392_999, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(9))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2604).saturating_mul(n.into()))
	}
}
