
//! Autogenerated weights for `pallet_pool_system`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-04, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner`, CPU: `AMD EPYC 7763 64-Core Processor`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("development-local"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=development-local
// --steps=50
// --repeat=20
// --pallet=pallet_pool_system
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/development/src/weights/pallet_pool_system.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_pool_system`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_pool_system::WeightInfo for WeightInfo<T> {
	/// Storage: Permissions Permission (r:1 w:0)
	/// Proof: Permissions Permission (max_values: None, max_size: Some(228), added: 2703, mode: MaxEncodedLen)
	/// Storage: PoolSystem Pool (r:1 w:1)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// The range of component `m` is `[0, 100]`.
	fn set_max_reserve(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `592`
		//  Estimated: `4278`
		// Minimum execution time: 28_493_000 picoseconds.
		Weight::from_parts(29_295_935, 0)
			.saturating_add(Weight::from_parts(0, 4278))
			// Standard Error: 374
			.saturating_add(Weight::from_parts(31_418, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: PoolSystem Pool (r:1 w:1)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: PoolSystem EpochExecution (r:1 w:0)
	/// Proof: PoolSystem EpochExecution (max_values: None, max_size: Some(754), added: 3229, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans PortfolioValuation (r:1 w:0)
	/// Proof: Loans PortfolioValuation (max_values: None, max_size: Some(24050), added: 26525, mode: MaxEncodedLen)
	/// Storage: PoolFees PortfolioValuation (r:1 w:1)
	/// Proof: PoolFees PortfolioValuation (max_values: None, max_size: Some(4850), added: 7325, mode: MaxEncodedLen)
	/// Storage: PoolFees AssetsUnderManagement (r:1 w:1)
	/// Proof: PoolFees AssetsUnderManagement (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: PoolFees ActiveFees (r:1 w:1)
	/// Proof: PoolFees ActiveFees (max_values: None, max_size: Some(14043), added: 16518, mode: MaxEncodedLen)
	/// Storage: OrmlTokens TotalIssuance (r:5 w:0)
	/// Proof: OrmlTokens TotalIssuance (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Investments ActiveInvestOrders (r:5 w:5)
	/// Proof: Investments ActiveInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingInvestOrders (r:5 w:5)
	/// Proof: Investments InProcessingInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InvestOrderId (r:5 w:5)
	/// Proof: Investments InvestOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Investments ActiveRedeemOrders (r:5 w:5)
	/// Proof: Investments ActiveRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingRedeemOrders (r:5 w:5)
	/// Proof: Investments InProcessingRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments RedeemOrderId (r:5 w:5)
	/// Proof: Investments RedeemOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: OrmlTokens Accounts (r:5 w:0)
	/// Proof: OrmlTokens Accounts (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	/// Storage: Investments ClearedInvestOrders (r:0 w:5)
	/// Proof: Investments ClearedInvestOrders (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Investments ClearedRedeemOrders (r:0 w:5)
	/// Proof: Investments ClearedRedeemOrders (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[1, 100]`.
	fn close_epoch_no_orders(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1425 + m * (124 ±0) + n * (175 ±0)`
		//  Estimated: `27515 + n * (2604 ±0)`
		// Minimum execution time: 524_366_000 picoseconds.
		Weight::from_parts(82_175_515, 0)
			.saturating_add(Weight::from_parts(0, 27515))
			// Standard Error: 138_179
			.saturating_add(Weight::from_parts(86_172_489, 0).saturating_mul(n.into()))
			// Standard Error: 6_381
			.saturating_add(Weight::from_parts(6_837_799, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().reads((8_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(4))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2604).saturating_mul(n.into()))
	}
	/// Storage: PoolSystem Pool (r:1 w:1)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: PoolSystem EpochExecution (r:1 w:1)
	/// Proof: PoolSystem EpochExecution (max_values: None, max_size: Some(754), added: 3229, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans PortfolioValuation (r:1 w:0)
	/// Proof: Loans PortfolioValuation (max_values: None, max_size: Some(24050), added: 26525, mode: MaxEncodedLen)
	/// Storage: PoolFees PortfolioValuation (r:1 w:1)
	/// Proof: PoolFees PortfolioValuation (max_values: None, max_size: Some(4850), added: 7325, mode: MaxEncodedLen)
	/// Storage: PoolFees AssetsUnderManagement (r:1 w:1)
	/// Proof: PoolFees AssetsUnderManagement (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: PoolFees ActiveFees (r:1 w:1)
	/// Proof: PoolFees ActiveFees (max_values: None, max_size: Some(14043), added: 16518, mode: MaxEncodedLen)
	/// Storage: OrmlTokens TotalIssuance (r:5 w:0)
	/// Proof: OrmlTokens TotalIssuance (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Investments ActiveInvestOrders (r:5 w:5)
	/// Proof: Investments ActiveInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingInvestOrders (r:5 w:5)
	/// Proof: Investments InProcessingInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InvestOrderId (r:5 w:5)
	/// Proof: Investments InvestOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Investments ActiveRedeemOrders (r:5 w:5)
	/// Proof: Investments ActiveRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingRedeemOrders (r:5 w:5)
	/// Proof: Investments InProcessingRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments RedeemOrderId (r:5 w:5)
	/// Proof: Investments RedeemOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn close_epoch_no_execution(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1276 + m * (124 ±0) + n * (133 ±0)`
		//  Estimated: `27515 + n * (2531 ±0)`
		// Minimum execution time: 258_811_000 picoseconds.
		Weight::from_parts(93_532_289, 0)
			.saturating_add(Weight::from_parts(0, 27515))
			// Standard Error: 111_864
			.saturating_add(Weight::from_parts(33_853_289, 0).saturating_mul(n.into()))
			// Standard Error: 5_104
			.saturating_add(Weight::from_parts(6_601_745, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(5))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2531).saturating_mul(n.into()))
	}
	/// Storage: PoolSystem Pool (r:1 w:1)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: PoolSystem EpochExecution (r:1 w:0)
	/// Proof: PoolSystem EpochExecution (max_values: None, max_size: Some(754), added: 3229, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans PortfolioValuation (r:1 w:0)
	/// Proof: Loans PortfolioValuation (max_values: None, max_size: Some(24050), added: 26525, mode: MaxEncodedLen)
	/// Storage: PoolFees PortfolioValuation (r:1 w:1)
	/// Proof: PoolFees PortfolioValuation (max_values: None, max_size: Some(4850), added: 7325, mode: MaxEncodedLen)
	/// Storage: PoolFees AssetsUnderManagement (r:1 w:1)
	/// Proof: PoolFees AssetsUnderManagement (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: PoolFees ActiveFees (r:1 w:1)
	/// Proof: PoolFees ActiveFees (max_values: None, max_size: Some(14043), added: 16518, mode: MaxEncodedLen)
	/// Storage: OrmlTokens TotalIssuance (r:5 w:1)
	/// Proof: OrmlTokens TotalIssuance (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Investments ActiveInvestOrders (r:5 w:5)
	/// Proof: Investments ActiveInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingInvestOrders (r:5 w:5)
	/// Proof: Investments InProcessingInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InvestOrderId (r:5 w:5)
	/// Proof: Investments InvestOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Investments ActiveRedeemOrders (r:5 w:5)
	/// Proof: Investments ActiveRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingRedeemOrders (r:5 w:5)
	/// Proof: Investments InProcessingRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments RedeemOrderId (r:5 w:5)
	/// Proof: Investments RedeemOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: OrmlTokens Accounts (r:7 w:3)
	/// Proof: OrmlTokens Accounts (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	/// Storage: OrmlAssetRegistry Metadata (r:2 w:0)
	/// Proof Skipped: OrmlAssetRegistry Metadata (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Investments ClearedInvestOrders (r:0 w:5)
	/// Proof: Investments ClearedInvestOrders (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Investments ClearedRedeemOrders (r:0 w:5)
	/// Proof: Investments ClearedRedeemOrders (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn close_epoch_execute(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2462 + m * (124 ±0) + n * (197 ±0)`
		//  Estimated: `27515 + m * (124 ±0) + n * (2604 ±0)`
		// Minimum execution time: 634_792_000 picoseconds.
		Weight::from_parts(214_475_514, 0)
			.saturating_add(Weight::from_parts(0, 27515))
			// Standard Error: 158_104
			.saturating_add(Weight::from_parts(86_629_363, 0).saturating_mul(n.into()))
			// Standard Error: 7_215
			.saturating_add(Weight::from_parts(6_790_515, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().reads((8_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(10))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 124).saturating_mul(m.into()))
			.saturating_add(Weight::from_parts(0, 2604).saturating_mul(n.into()))
	}
	/// Storage: PoolSystem EpochExecution (r:1 w:1)
	/// Proof: PoolSystem EpochExecution (max_values: None, max_size: Some(754), added: 3229, mode: MaxEncodedLen)
	/// Storage: PoolSystem Pool (r:1 w:0)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: PoolFees ActiveFees (r:1 w:0)
	/// Proof: PoolFees ActiveFees (max_values: None, max_size: Some(14043), added: 16518, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn submit_solution(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `821 + m * (124 ±0) + n * (249 ±0)`
		//  Estimated: `17508`
		// Minimum execution time: 42_369_000 picoseconds.
		Weight::from_parts(37_122_780, 0)
			.saturating_add(Weight::from_parts(0, 17508))
			// Standard Error: 33_630
			.saturating_add(Weight::from_parts(1_543_894, 0).saturating_mul(n.into()))
			// Standard Error: 1_534
			.saturating_add(Weight::from_parts(199_535, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: PoolSystem EpochExecution (r:1 w:1)
	/// Proof: PoolSystem EpochExecution (max_values: None, max_size: Some(754), added: 3229, mode: MaxEncodedLen)
	/// Storage: PoolSystem Pool (r:1 w:1)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: PoolFees ActiveFees (r:1 w:1)
	/// Proof: PoolFees ActiveFees (max_values: None, max_size: Some(14043), added: 16518, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingInvestOrders (r:5 w:5)
	/// Proof: Investments InProcessingInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: OrmlTokens Accounts (r:7 w:3)
	/// Proof: OrmlTokens Accounts (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	/// Storage: OrmlAssetRegistry Metadata (r:2 w:0)
	/// Proof Skipped: OrmlAssetRegistry Metadata (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: OrmlTokens TotalIssuance (r:1 w:1)
	/// Proof: OrmlTokens TotalIssuance (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Investments InvestOrderId (r:5 w:0)
	/// Proof: Investments InvestOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Investments ActiveInvestOrders (r:5 w:5)
	/// Proof: Investments ActiveInvestOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments InProcessingRedeemOrders (r:5 w:5)
	/// Proof: Investments InProcessingRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Investments RedeemOrderId (r:5 w:0)
	/// Proof: Investments RedeemOrderId (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Investments ActiveRedeemOrders (r:5 w:5)
	/// Proof: Investments ActiveRedeemOrders (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Investments ClearedInvestOrders (r:0 w:5)
	/// Proof: Investments ClearedInvestOrders (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Investments ClearedRedeemOrders (r:0 w:5)
	/// Proof: Investments ClearedRedeemOrders (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 5]`.
	/// The range of component `m` is `[0, 100]`.
	fn execute_epoch(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2359 + m * (124 ±0) + n * (671 ±0)`
		//  Estimated: `17508 + m * (124 ±0) + n * (2604 ±0)`
		// Minimum execution time: 264_012_000 picoseconds.
		Weight::from_parts(165_396_115, 0)
			.saturating_add(Weight::from_parts(0, 17508))
			// Standard Error: 107_102
			.saturating_add(Weight::from_parts(63_850_944, 0).saturating_mul(n.into()))
			// Standard Error: 4_887
			.saturating_add(Weight::from_parts(402_149, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(9))
			.saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 124).saturating_mul(m.into()))
			.saturating_add(Weight::from_parts(0, 2604).saturating_mul(n.into()))
	}
}
