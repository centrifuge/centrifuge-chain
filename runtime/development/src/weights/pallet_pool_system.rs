//! Autogenerated weights for pallet_pool_system
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-29, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("development-local"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=development-local
// --steps=50
// --repeat=20
// --pallet=pallet_pool_system
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/development/src/weights/pallet_pool_system.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_pool_system::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_pool_system using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn create(n: u32) -> Weight {
		Weight::from_ref_time(74_584_000) // Standard Error: 70_000
			.saturating_add(Weight::from_ref_time(536_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}

	fn update_no_execution(n: u32) -> Weight {
		Weight::from_ref_time(28_723_000) // Standard Error: 19_000
			.saturating_add(Weight::from_ref_time(224_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn update_and_execute(n: u32) -> Weight {
		Weight::from_ref_time(47_712_000) // Standard Error: 28_000
			.saturating_add(Weight::from_ref_time(876_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn execute_update(n: u32) -> Weight {
		Weight::from_ref_time(45_860_000) // Standard Error: 42_000
			.saturating_add(Weight::from_ref_time(1_060_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn set_max_reserve() -> Weight {
		Weight::from_ref_time(34_621_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn close_epoch_no_orders(n: u32) -> Weight {
		Weight::from_ref_time(47_477_000) // Standard Error: 45_000
			.saturating_add(Weight::from_ref_time(7_951_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(n as u64)))
	}

	fn close_epoch_no_execution(n: u32) -> Weight {
		Weight::from_ref_time(57_512_000) // Standard Error: 94_000
			.saturating_add(Weight::from_ref_time(6_108_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn close_epoch_execute(n: u32) -> Weight {
		Weight::from_ref_time(104_371_000) // Standard Error: 57_000
			.saturating_add(Weight::from_ref_time(9_447_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(n as u64)))
	}

	fn submit_solution(n: u32) -> Weight {
		Weight::from_ref_time(40_223_000) // Standard Error: 56_000
			.saturating_add(Weight::from_ref_time(1_661_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn execute_epoch(n: u32) -> Weight {
		Weight::from_ref_time(90_950_000) // Standard Error: 38_000
			.saturating_add(Weight::from_ref_time(4_210_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(n as u64)))
	}
}
