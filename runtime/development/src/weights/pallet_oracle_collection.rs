
//! Autogenerated weights for `pallet_oracle_collection`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-04, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner`, CPU: `AMD EPYC 7763 64-Core Processor`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("development-local"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=development-local
// --steps=50
// --repeat=20
// --pallet=pallet_oracle_collection
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/development/src/weights/pallet_oracle_collection.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_oracle_collection`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_oracle_collection::WeightInfo for WeightInfo<T> {
	/// Storage: Permissions Permission (r:1 w:0)
	/// Proof: Permissions Permission (max_values: None, max_size: Some(228), added: 2703, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: PoolSystem NotedChange (r:0 w:1)
	/// Proof: PoolSystem NotedChange (max_values: None, max_size: Some(6136), added: 8611, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	fn propose_update_collection_info(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `222`
		//  Estimated: `3693`
		// Minimum execution time: 29_214_000 picoseconds.
		Weight::from_parts(28_632_452, 0)
			.saturating_add(Weight::from_parts(0, 3693))
			// Standard Error: 5_629
			.saturating_add(Weight::from_parts(1_628_737, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: PoolSystem NotedChange (r:1 w:1)
	/// Proof: PoolSystem NotedChange (max_values: None, max_size: Some(6136), added: 8611, mode: MaxEncodedLen)
	/// Storage: PoolSystem Pool (r:1 w:0)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: OraclePriceCollection Collection (r:0 w:1)
	/// Proof: OraclePriceCollection Collection (max_values: None, max_size: Some(75042), added: 77517, mode: MaxEncodedLen)
	/// Storage: OraclePriceCollection CollectionInfo (r:0 w:1)
	/// Proof: OraclePriceCollection CollectionInfo (max_values: None, max_size: Some(6078), added: 8553, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	fn apply_update_collection_info(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `658 + n * (34 ±0)`
		//  Estimated: `9601`
		// Minimum execution time: 35_636_000 picoseconds.
		Weight::from_parts(35_001_125, 0)
			.saturating_add(Weight::from_parts(0, 9601))
			// Standard Error: 5_843
			.saturating_add(Weight::from_parts(1_730_127, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: OraclePriceCollection Keys (r:11 w:0)
	/// Proof: OraclePriceCollection Keys (max_values: None, max_size: Some(95), added: 2570, mode: MaxEncodedLen)
	/// Storage: OraclePriceCollection CollectionInfo (r:1 w:0)
	/// Proof: OraclePriceCollection CollectionInfo (max_values: None, max_size: Some(6078), added: 8553, mode: MaxEncodedLen)
	/// Storage: OraclePriceFeed FedValues (r:100 w:0)
	/// Proof: OraclePriceFeed FedValues (max_values: None, max_size: Some(711), added: 3186, mode: MaxEncodedLen)
	/// Storage: PoolSystem Pool (r:1 w:0)
	/// Proof: PoolSystem Pool (max_values: None, max_size: Some(813), added: 3288, mode: MaxEncodedLen)
	/// Storage: OrmlAssetRegistry Metadata (r:1 w:0)
	/// Proof Skipped: OrmlAssetRegistry Metadata (max_values: None, max_size: None, mode: Measured)
	/// Storage: OraclePriceCollection Collection (r:0 w:1)
	/// Proof: OraclePriceCollection Collection (max_values: None, max_size: Some(75042), added: 77517, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `m` is `[1, 10]`.
	fn update_collection(n: u32, m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + m * (607 ±0) + n * (663 ±0)`
		//  Estimated: `32850 + m * (9227 ±363) + n * (9227 ±363)`
		// Minimum execution time: 261_336_000 picoseconds.
		Weight::from_parts(263_832_000, 0)
			.saturating_add(Weight::from_parts(0, 32850))
			// Standard Error: 3_330_840
			.saturating_add(Weight::from_parts(99_886_250, 0).saturating_mul(n.into()))
			// Standard Error: 3_330_840
			.saturating_add(Weight::from_parts(62_424_750, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(16))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(m.into())))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(Weight::from_parts(0, 9227).saturating_mul(m.into()))
			.saturating_add(Weight::from_parts(0, 9227).saturating_mul(n.into()))
	}
}
