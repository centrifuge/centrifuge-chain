
//! Autogenerated weights for `pallet_loans`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-22, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `runner`, CPU: `Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("centrifuge-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=centrifuge-dev
// --steps=50
// --repeat=20
// --pallet=pallet_loans
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/centrifuge/src/weights/pallet_loans.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_loans`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_loans::WeightInfo for WeightInfo<T> {
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: PoolSystem Pool (r:1 w:0)
	// Storage: Loans PoolToLoanNftClass (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Loans PoolNAV (r:0 w:1)
	// Storage: Loans LoanNftClassToPool (r:0 w:1)
	fn initialise_pool() -> Weight {
		// Minimum execution time: 75_203 nanoseconds.
		Weight::from_ref_time(76_803_000 as u64)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: Uniques Asset (r:2 w:2)
	// Storage: Loans LoanNftClassToPool (r:1 w:0)
	// Storage: Loans NextLoanId (r:1 w:1)
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Uniques Class (r:2 w:1)
	// Storage: Uniques CollectionMaxSupply (r:1 w:0)
	// Storage: Loans Loan (r:0 w:1)
	// Storage: Uniques Account (r:0 w:3)
	// Storage: Uniques ItemPriceOf (r:0 w:1)
	fn create() -> Weight {
		// Minimum execution time: 173_306 nanoseconds.
		Weight::from_ref_time(175_507_000 as u64)
			.saturating_add(T::DbWeight::get().reads(9 as u64))
			.saturating_add(T::DbWeight::get().writes(9 as u64))
	}
	// Storage: Loans Loan (r:1 w:1)
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:1)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: InterestAccrual LastUpdated (r:1 w:0)
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: Loans PoolNAV (r:1 w:1)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 50]`.
	fn price(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 134_805 nanoseconds.
		Weight::from_ref_time(118_993_413 as u64)
			// Standard Error: 10_037
			.saturating_add(Weight::from_ref_time(1_157_489 as u64).saturating_mul(n as u64))
			// Standard Error: 10_037
			.saturating_add(Weight::from_ref_time(440_575 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(8 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Loans PoolWriteOffGroups (r:1 w:1)
	fn add_write_off_group() -> Weight {
		// Minimum execution time: 71_102 nanoseconds.
		Weight::from_ref_time(73_203_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Uniques Asset (r:1 w:0)
	// Storage: Loans Loan (r:1 w:0)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:0)
	// Storage: InterestAccrual LastUpdated (r:1 w:0)
	// Storage: Loans PoolNAV (r:1 w:1)
	// Storage: PoolSystem Pool (r:1 w:1)
	// Storage: OrmlTokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:0)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 50]`.
	fn initial_borrow(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 237_608 nanoseconds.
		Weight::from_ref_time(239_401_446 as u64)
			// Standard Error: 13_924
			.saturating_add(Weight::from_ref_time(1_019_000 as u64).saturating_mul(n as u64))
			// Standard Error: 13_924
			.saturating_add(Weight::from_ref_time(149_810 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(12 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Uniques Asset (r:1 w:0)
	// Storage: Loans Loan (r:1 w:0)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:0)
	// Storage: InterestAccrual LastUpdated (r:1 w:0)
	// Storage: Loans PoolNAV (r:1 w:1)
	// Storage: PoolSystem Pool (r:1 w:1)
	// Storage: OrmlTokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:0)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 50]`.
	fn further_borrows(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 333_610 nanoseconds.
		Weight::from_ref_time(333_270_782 as u64)
			// Standard Error: 14_630
			.saturating_add(Weight::from_ref_time(761_872 as u64).saturating_mul(n as u64))
			// Standard Error: 14_630
			.saturating_add(Weight::from_ref_time(171_850 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(12 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Uniques Asset (r:1 w:0)
	// Storage: Loans Loan (r:1 w:0)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:0)
	// Storage: InterestAccrual LastUpdated (r:1 w:0)
	// Storage: Loans PoolNAV (r:1 w:1)
	// Storage: PoolSystem Pool (r:1 w:1)
	// Storage: OrmlTokens Accounts (r:2 w:2)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 50]`.
	fn repay(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 289_207 nanoseconds.
		Weight::from_ref_time(288_708_375 as u64)
			// Standard Error: 10_712
			.saturating_add(Weight::from_ref_time(834_934 as u64).saturating_mul(n as u64))
			// Standard Error: 10_712
			.saturating_add(Weight::from_ref_time(154_924 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(12 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Loans Loan (r:1 w:0)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:1)
	// Storage: InterestAccrual LastUpdated (r:1 w:0)
	// Storage: Loans PoolNAV (r:1 w:1)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 100]`.
	/// The range of component `o` is `[1, 49]`.
	fn write_off(n: u32, m: u32, o: u32, ) -> Weight {
		// Minimum execution time: 196_705 nanoseconds.
		Weight::from_ref_time(189_322_169 as u64)
			// Standard Error: 9_601
			.saturating_add(Weight::from_ref_time(834_064 as u64).saturating_mul(n as u64))
			// Standard Error: 4_740
			.saturating_add(Weight::from_ref_time(49_870 as u64).saturating_mul(m as u64))
			// Standard Error: 9_615
			.saturating_add(Weight::from_ref_time(168_517 as u64).saturating_mul(o as u64))
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: Loans Loan (r:1 w:0)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:1)
	// Storage: InterestAccrual LastUpdated (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Loans PoolNAV (r:1 w:1)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 49]`.
	fn admin_write_off(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 207_103 nanoseconds.
		Weight::from_ref_time(200_268_020 as u64)
			// Standard Error: 10_661
			.saturating_add(Weight::from_ref_time(806_425 as u64).saturating_mul(n as u64))
			// Standard Error: 10_676
			.saturating_add(Weight::from_ref_time(293_812 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(8 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Uniques Asset (r:2 w:2)
	// Storage: Loans Loan (r:1 w:1)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: Uniques Class (r:2 w:1)
	// Storage: InterestAccrual Rates (r:1 w:1)
	// Storage: Loans ClosedLoans (r:0 w:1)
	// Storage: Uniques Account (r:0 w:3)
	// Storage: Uniques ItemPriceOf (r:0 w:2)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 50]`.
	fn repay_and_close(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 193_503 nanoseconds.
		Weight::from_ref_time(199_328_934 as u64)
			// Standard Error: 14_071
			.saturating_add(Weight::from_ref_time(992_455 as u64).saturating_mul(n as u64))
			// Standard Error: 14_071
			.saturating_add(Weight::from_ref_time(86_300 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(9 as u64))
			.saturating_add(T::DbWeight::get().writes(12 as u64))
	}
	// Storage: Loans PoolToLoanNftClass (r:1 w:0)
	// Storage: Uniques Asset (r:2 w:2)
	// Storage: Loans Loan (r:1 w:1)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: Uniques Class (r:2 w:1)
	// Storage: InterestAccrual Rates (r:1 w:1)
	// Storage: Loans ClosedLoans (r:0 w:1)
	// Storage: Uniques Account (r:0 w:3)
	// Storage: Uniques ItemPriceOf (r:0 w:2)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 49]`.
	fn write_off_and_close(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 197_702 nanoseconds.
		Weight::from_ref_time(197_135_893 as u64)
			// Standard Error: 12_445
			.saturating_add(Weight::from_ref_time(979_877 as u64).saturating_mul(n as u64))
			// Standard Error: 12_463
			.saturating_add(Weight::from_ref_time(129_477 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(9 as u64))
			.saturating_add(T::DbWeight::get().writes(12 as u64))
	}
	// Storage: Loans PoolWriteOffGroups (r:1 w:0)
	// Storage: InterestAccrual Rates (r:1 w:0)
	// Storage: Loans ActiveLoans (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Loans PoolNAV (r:0 w:1)
	/// The range of component `n` is `[1, 50]`.
	/// The range of component `m` is `[1, 50]`.
	fn update_nav(n: u32, m: u32, ) -> Weight {
		// Minimum execution time: 130_302 nanoseconds.
		Weight::from_ref_time(83_317_734 as u64)
			// Standard Error: 27_700
			.saturating_add(Weight::from_ref_time(45_266_774 as u64).saturating_mul(n as u64))
			// Standard Error: 27_700
			.saturating_add(Weight::from_ref_time(374_824 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}
