
//! Autogenerated weights for `pallet_permissions`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-22, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `runner`, CPU: `Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("centrifuge-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=centrifuge-dev
// --steps=50
// --repeat=20
// --pallet=pallet_permissions
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/centrifuge/src/weights/pallet_permissions.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_permissions`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_permissions::WeightInfo for WeightInfo<T> {
	// Storage: Permissions PermissionCount (r:1 w:1)
	// Storage: Permissions Permission (r:1 w:1)
	fn add_as_admin() -> Weight {
		// Minimum execution time: 40_900 nanoseconds.
		Weight::from_ref_time(41_501_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Permissions Permission (r:2 w:1)
	// Storage: Permissions PermissionCount (r:1 w:1)
	fn add_as_editor() -> Weight {
		// Minimum execution time: 51_000 nanoseconds.
		Weight::from_ref_time(51_701_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Permissions PermissionCount (r:1 w:1)
	// Storage: Permissions Permission (r:1 w:1)
	fn remove_as_admin() -> Weight {
		// Minimum execution time: 44_700 nanoseconds.
		Weight::from_ref_time(45_700_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Permissions Permission (r:2 w:1)
	// Storage: Permissions PermissionCount (r:1 w:1)
	fn remove_as_editor() -> Weight {
		// Minimum execution time: 54_101 nanoseconds.
		Weight::from_ref_time(55_001_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Permissions Permission (r:1 w:1)
	fn purge() -> Weight {
		// Minimum execution time: 40_600 nanoseconds.
		Weight::from_ref_time(41_500_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Permissions Permission (r:1 w:1)
	fn admin_purge() -> Weight {
		// Minimum execution time: 41_100 nanoseconds.
		Weight::from_ref_time(41_700_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
