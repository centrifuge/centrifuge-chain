
//! Autogenerated weights for `pallet_pool_registry`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `runner`, CPU: `Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_pool_registry
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_pool_registry.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_pool_registry`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_pool_registry::WeightInfo for WeightInfo<T> {
	// Storage: PoolRegistry Pools (r:1 w:1)
	// Storage: PoolSystem Pool (r:1 w:1)
	// Storage: PoolSystem AccountDeposit (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: OrmlAssetRegistry Metadata (r:2 w:1)
	// Storage: Permissions PermissionCount (r:1 w:1)
	// Storage: Permissions Permission (r:1 w:1)
	// Storage: PoolSystem PoolDeposit (r:0 w:1)
	/// The range of component `n` is `[1, 5]`.
	fn register(n: u32, ) -> Weight {
		// Minimum execution time: 102_901 nanoseconds.
		Weight::from_ref_time(87_373_356)
			// Standard Error: 29_215
			.saturating_add(Weight::from_ref_time(17_496_106).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
	}
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: PoolSystem EpochExecution (r:1 w:0)
	// Storage: PoolSystem Pool (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Investments ActiveRedeemOrders (r:1 w:0)
	// Storage: PoolSystem ScheduledUpdate (r:0 w:1)
	/// The range of component `n` is `[1, 5]`.
	fn update_no_execution(n: u32, ) -> Weight {
		// Minimum execution time: 70_802 nanoseconds.
		Weight::from_ref_time(70_227_157)
			// Standard Error: 22_279
			.saturating_add(Weight::from_ref_time(2_744_247).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: PoolSystem EpochExecution (r:1 w:0)
	// Storage: PoolSystem Pool (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Investments ActiveRedeemOrders (r:1 w:0)
	// Storage: OrmlAssetRegistry Metadata (r:2 w:1)
	// Storage: PoolSystem ScheduledUpdate (r:0 w:1)
	/// The range of component `n` is `[1, 5]`.
	fn update_and_execute(n: u32, ) -> Weight {
		// Minimum execution time: 103_201 nanoseconds.
		Weight::from_ref_time(96_453_204)
			// Standard Error: 34_184
			.saturating_add(Weight::from_ref_time(8_717_524).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: PoolSystem Pool (r:1 w:1)
	// Storage: PoolSystem EpochExecution (r:1 w:0)
	// Storage: PoolSystem ScheduledUpdate (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Investments ActiveRedeemOrders (r:1 w:0)
	// Storage: OrmlAssetRegistry Metadata (r:2 w:1)
	/// The range of component `n` is `[1, 5]`.
	fn execute_update(n: u32, ) -> Weight {
		// Minimum execution time: 93_502 nanoseconds.
		Weight::from_ref_time(86_558_286)
			// Standard Error: 88_417
			.saturating_add(Weight::from_ref_time(9_187_996).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Permissions Permission (r:1 w:0)
	// Storage: PoolRegistry PoolMetadata (r:0 w:1)
	/// The range of component `n` is `[0, 46]`.
	fn set_metadata(n: u32, ) -> Weight {
		// Minimum execution time: 37_900 nanoseconds.
		Weight::from_ref_time(39_268_285)
			// Standard Error: 1_120
			.saturating_add(Weight::from_ref_time(16_046).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
