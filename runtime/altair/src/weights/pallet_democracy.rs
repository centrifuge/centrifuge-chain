//! Autogenerated weights for pallet_democracy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_democracy
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_democracy.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_democracy::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_democracy using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn propose() -> Weight {
		Weight::from_ref_time(36_000_000)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn second(s: u32) -> Weight {
		Weight::from_ref_time(28_540_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(42_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn vote_new(r: u32) -> Weight {
		Weight::from_ref_time(37_222_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(67_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn vote_existing(r: u32) -> Weight {
		Weight::from_ref_time(37_188_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(69_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn emergency_cancel() -> Weight {
		Weight::from_ref_time(19_000_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn blacklist(p: u32) -> Weight {
		Weight::from_ref_time(50_433_000) // Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(157_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}

	fn external_propose(v: u32) -> Weight {
		Weight::from_ref_time(13_662_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(4_000).saturating_mul(v as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn external_propose_majority() -> Weight {
		Weight::from_ref_time(4_000_000).saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn external_propose_default() -> Weight {
		Weight::from_ref_time(4_000_000).saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn fast_track() -> Weight {
		Weight::from_ref_time(19_000_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn veto_external(v: u32) -> Weight {
		Weight::from_ref_time(20_328_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(13_000).saturating_mul(v as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn cancel_proposal(p: u32) -> Weight {
		Weight::from_ref_time(42_430_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(124_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}

	fn cancel_referendum() -> Weight {
		Weight::from_ref_time(12_000_000).saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn cancel_queued(r: u32) -> Weight {
		Weight::from_ref_time(22_811_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(1_168_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn on_initialize_base(r: u32) -> Weight {
		Weight::from_ref_time(8_067_000) // Standard Error: 10_000
			.saturating_add(Weight::from_ref_time(2_157_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn on_initialize_base_with_launch_period(r: u32) -> Weight {
		Weight::from_ref_time(8_467_000) // Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(2_156_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn delegate(r: u32) -> Weight {
		Weight::from_ref_time(39_643_000) // Standard Error: 14_000
			.saturating_add(Weight::from_ref_time(3_103_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(r as u64)))
	}

	fn undelegate(r: u32) -> Weight {
		Weight::from_ref_time(21_847_000) // Standard Error: 16_000
			.saturating_add(Weight::from_ref_time(3_105_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(r as u64)))
	}

	fn clear_public_proposals() -> Weight {
		Weight::from_ref_time(5_000_000).saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn note_preimage(b: u32) -> Weight {
		Weight::from_ref_time(25_871_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(1_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn note_imminent_preimage(b: u32) -> Weight {
		Weight::from_ref_time(19_257_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(1_000).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn reap_preimage(_b: u32) -> Weight {
		Weight::from_ref_time(32_884_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn unlock_remove(r: u32) -> Weight {
		Weight::from_ref_time(27_446_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(20_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn unlock_set(r: u32) -> Weight {
		Weight::from_ref_time(26_709_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(58_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn remove_vote(r: u32) -> Weight {
		Weight::from_ref_time(15_384_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(63_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn remove_other_vote(r: u32) -> Weight {
		Weight::from_ref_time(15_408_000) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(62_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}
