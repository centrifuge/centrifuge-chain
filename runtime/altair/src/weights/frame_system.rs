//! Autogenerated weights for frame_system
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=frame_system
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/frame_system.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weights for frame_system using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> frame_system::WeightInfo for WeightInfo<T> {
	fn remark(b: u32) -> Weight {
		Weight::from_ref_time(0) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(1_000).saturating_mul(b as u64))
	}

	fn remark_with_event(b: u32) -> Weight {
		Weight::from_ref_time(0) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(3_000).saturating_mul(b as u64))
	}

	fn set_heap_pages() -> Weight {
		Weight::from_ref_time(23_006_000)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}

	fn set_storage(i: u32) -> Weight {
		Weight::from_ref_time(5_831_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(1_269_000).saturating_mul(i as u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(i as u64)))
	}

	fn kill_storage(i: u32) -> Weight {
		Weight::from_ref_time(802_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(1_016_000).saturating_mul(i as u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(i as u64)))
	}

	fn kill_prefix(p: u32) -> Weight {
		Weight::from_ref_time(0) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(2_101_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(p as u64)))
	}
}
