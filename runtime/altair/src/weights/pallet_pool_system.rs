//! Autogenerated weights for pallet_pool_system
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_pool_system
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_pool_system.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_pool_system::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_pool_system using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn create(n: u32) -> Weight {
		Weight::from_ref_time(72_307_000) // Standard Error: 181_000
			.saturating_add(Weight::from_ref_time(717_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}

	fn update_no_execution(n: u32) -> Weight {
		Weight::from_ref_time(42_621_000) // Standard Error: 59_000
			.saturating_add(Weight::from_ref_time(232_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn update_and_execute(n: u32) -> Weight {
		Weight::from_ref_time(65_582_000) // Standard Error: 119_000
			.saturating_add(Weight::from_ref_time(1_235_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn execute_scheduled_update(n: u32) -> Weight {
		Weight::from_ref_time(66_435_000) // Standard Error: 90_000
			.saturating_add(Weight::from_ref_time(1_389_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn set_metadata(n: u32) -> Weight {
		Weight::from_ref_time(47_352_000) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(115_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn set_max_reserve() -> Weight {
		Weight::from_ref_time(52_007_000)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn close_epoch_no_orders(n: u32) -> Weight {
		Weight::from_ref_time(70_657_000) // Standard Error: 154_000
			.saturating_add(Weight::from_ref_time(10_133_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(n as u64)))
	}

	fn close_epoch_no_execution(n: u32) -> Weight {
		Weight::from_ref_time(76_962_000) // Standard Error: 184_000
			.saturating_add(Weight::from_ref_time(7_807_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn close_epoch_execute(n: u32) -> Weight {
		Weight::from_ref_time(136_810_000) // Standard Error: 510_000
			.saturating_add(Weight::from_ref_time(14_972_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(n as u64)))
	}

	fn submit_solution(n: u32) -> Weight {
		Weight::from_ref_time(56_598_000) // Standard Error: 132_000
			.saturating_add(Weight::from_ref_time(2_083_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn execute_epoch(n: u32) -> Weight {
		Weight::from_ref_time(122_646_000) // Standard Error: 244_000
			.saturating_add(Weight::from_ref_time(7_114_000).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(n as u64)))
	}
}
