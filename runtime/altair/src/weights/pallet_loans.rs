//! Autogenerated weights for pallet_loans
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-07-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_loans
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/branan/runtime/altair/src/weights/pallet_loans.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_loans::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_loans using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn initialise_pool() -> Weight {
		(61_145_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn create() -> Weight {
		(181_873_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	fn price(n: u32) -> Weight {
		(94_370_000 as Weight) // Standard Error: 7_000
			.saturating_add((872_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn add_write_off_group() -> Weight {
		(60_459_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn initial_borrow(n: u32) -> Weight {
		(743_813_000 as Weight) // Standard Error: 8_000
			.saturating_add((924_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	fn further_borrows(n: u32) -> Weight {
		(1_676_981_000 as Weight) // Standard Error: 10_000
			.saturating_add((921_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	fn repay(n: u32) -> Weight {
		(1_233_321_000 as Weight) // Standard Error: 10_000
			.saturating_add((932_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	fn write_off(n: u32, m: u32) -> Weight {
		(1_083_285_000 as Weight) // Standard Error: 4_000
			.saturating_add((856_000 as Weight).saturating_mul(n as Weight)) // Standard Error: 12_000
			.saturating_add((130_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn admin_write_off(n: u32) -> Weight {
		(1_109_997_000 as Weight) // Standard Error: 9_000
			.saturating_add((861_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn repay_and_close(n: u32) -> Weight {
		(224_915_000 as Weight) // Standard Error: 6_000
			.saturating_add((862_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	fn write_off_and_close(n: u32) -> Weight {
		(230_446_000 as Weight) // Standard Error: 6_000
			.saturating_add((859_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	fn update_nav(n: u32) -> Weight {
		(0 as Weight) // Standard Error: 168_000
			.saturating_add((699_678_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
}
