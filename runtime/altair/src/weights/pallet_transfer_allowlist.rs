
//! Autogenerated weights for `pallet_transfer_allowlist`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-10, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `kf-FG`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("development-local"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=development-local
// --steps=50
// --repeat=20
// --pallet=pallet_transfer_allowlist
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/development/src/weights/pallet_transfer_allowlist.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_transfer_allowlist`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_transfer_allowlist::WeightInfo for WeightInfo<T> {
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: TransferAllowList AccountCurrencyTransferAllowance (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferAllowance (max_values: None, max_size: Some(131), added: 2606, mode: MaxEncodedLen)
	/// Storage: Fees FeeBalances (r:1 w:0)
	/// Proof: Fees FeeBalances (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn add_transfer_allowance_no_existing_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `3596`
		// Minimum execution time: 39_000_000 picoseconds.
		Weight::from_parts(40_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: TransferAllowList AccountCurrencyTransferAllowance (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferAllowance (max_values: None, max_size: Some(131), added: 2606, mode: MaxEncodedLen)
	/// Storage: Fees FeeBalances (r:1 w:0)
	/// Proof: Fees FeeBalances (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn add_transfer_allowance_existing_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `626`
		//  Estimated: `3596`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(43_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn add_allowance_delay_no_existing_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `180`
		//  Estimated: `3556`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3556))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn add_allowance_delay_existing_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `299`
		//  Estimated: `3556`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(14_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3556))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn toggle_allowance_delay_once_future_modifiable() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `269`
		//  Estimated: `3556`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(14_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3556))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn update_allowance_delay() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `273`
		//  Estimated: `3556`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(14_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3556))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn purge_allowance_delay_no_remaining_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `273`
		//  Estimated: `3556`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(14_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3556))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn purge_allowance_delay_remaining_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `307`
		//  Estimated: `3556`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(14_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3556))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:0)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: TransferAllowList AccountCurrencyTransferAllowance (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferAllowance (max_values: None, max_size: Some(131), added: 2606, mode: MaxEncodedLen)
	fn remove_transfer_allowance_delay_present() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `397`
		//  Estimated: `3596`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(22_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:0)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: TransferAllowList AccountCurrencyTransferAllowance (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferAllowance (max_values: None, max_size: Some(131), added: 2606, mode: MaxEncodedLen)
	fn remove_transfer_allowance_no_delay() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `393`
		//  Estimated: `3596`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(21_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferAllowance (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferAllowance (max_values: None, max_size: Some(131), added: 2606, mode: MaxEncodedLen)
	/// Storage: Fees FeeBalances (r:1 w:0)
	/// Proof: Fees FeeBalances (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn purge_transfer_allowance_no_remaining_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `750`
		//  Estimated: `3596`
		// Minimum execution time: 41_000_000 picoseconds.
		Weight::from_parts(42_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: TransferAllowList AccountCurrencyTransferAllowance (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferAllowance (max_values: None, max_size: Some(131), added: 2606, mode: MaxEncodedLen)
	/// Storage: Fees FeeBalances (r:1 w:0)
	/// Proof: Fees FeeBalances (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: TransferAllowList AccountCurrencyTransferCountDelay (r:1 w:1)
	/// Proof: TransferAllowList AccountCurrencyTransferCountDelay (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	fn purge_transfer_allowance_remaining_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `789`
		//  Estimated: `3596`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(42_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}

	fn remove_transfer_allowance_missing_allowance() -> Weight {
		Weight::from_parts(21_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3596))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
