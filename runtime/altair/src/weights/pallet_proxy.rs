//! Autogenerated weights for pallet_proxy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_proxy
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_proxy.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_proxy::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_proxy using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn proxy(p: u32) -> Weight {
		Weight::from_ref_time(17_890_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(21_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}

	fn proxy_announced(a: u32, p: u32) -> Weight {
		Weight::from_ref_time(32_997_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(118_000).saturating_mul(a as u64)) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(32_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn remove_announcement(a: u32, p: u32) -> Weight {
		Weight::from_ref_time(22_992_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(100_000).saturating_mul(a as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(7_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn reject_announcement(a: u32, p: u32) -> Weight {
		Weight::from_ref_time(22_806_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(102_000).saturating_mul(a as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(7_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn announce(a: u32, p: u32) -> Weight {
		Weight::from_ref_time(30_573_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(107_000).saturating_mul(a as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(18_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn add_proxy(p: u32) -> Weight {
		Weight::from_ref_time(25_596_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(52_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn remove_proxy(p: u32) -> Weight {
		Weight::from_ref_time(25_244_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(57_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn remove_proxies(p: u32) -> Weight {
		Weight::from_ref_time(21_559_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(21_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn anonymous(p: u32) -> Weight {
		Weight::from_ref_time(26_979_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(5_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn kill_anonymous(p: u32) -> Weight {
		Weight::from_ref_time(22_360_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(22_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
