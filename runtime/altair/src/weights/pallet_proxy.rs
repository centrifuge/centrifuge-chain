//! Autogenerated weights for pallet_proxy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_proxy
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_proxy.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weights for pallet_proxy using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_proxy::WeightInfo for WeightInfo<T> {
	fn proxy(_p: u32) -> Weight {
		todo!()
	}

	fn proxy_announced(_a: u32, _p: u32) -> Weight {
		todo!()
	}

	fn remove_announcement(_a: u32, _p: u32) -> Weight {
		todo!()
	}

	fn reject_announcement(_a: u32, _p: u32) -> Weight {
		todo!()
	}

	fn announce(_a: u32, _p: u32) -> Weight {
		todo!()
	}

	fn add_proxy(_p: u32) -> Weight {
		todo!()
	}

	fn remove_proxy(_p: u32) -> Weight {
		todo!()
	}

	fn remove_proxies(_p: u32) -> Weight {
		todo!()
	}

	fn create_pure(_p: u32) -> Weight {
		todo!()
	}

	fn kill_pure(_p: u32) -> Weight {
		todo!()
	}
}
