//! Autogenerated weights for pallet_scheduler
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_scheduler
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_scheduler.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_scheduler::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_scheduler using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn on_initialize_periodic_named_resolved(s: u32) -> Weight {
		Weight::from_ref_time(10_845_000) // Standard Error: 19_000
			.saturating_add(Weight::from_ref_time(20_301_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((3 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((4 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_named_resolved(s: u32) -> Weight {
		Weight::from_ref_time(10_871_000) // Standard Error: 19_000
			.saturating_add(Weight::from_ref_time(16_654_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((2 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((3 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_periodic_resolved(s: u32) -> Weight {
		Weight::from_ref_time(8_295_000) // Standard Error: 17_000
			.saturating_add(Weight::from_ref_time(17_593_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((3 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((3 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_resolved(s: u32) -> Weight {
		Weight::from_ref_time(8_690_000) // Standard Error: 15_000
			.saturating_add(Weight::from_ref_time(15_672_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((2 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_named_aborted(s: u32) -> Weight {
		Weight::from_ref_time(7_421_000) // Standard Error: 6_000
			.saturating_add(Weight::from_ref_time(6_361_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_aborted(s: u32) -> Weight {
		Weight::from_ref_time(7_838_000) // Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(3_867_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn on_initialize_periodic_named(s: u32) -> Weight {
		Weight::from_ref_time(11_123_000) // Standard Error: 10_000
			.saturating_add(Weight::from_ref_time(11_393_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((2 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_periodic(s: u32) -> Weight {
		Weight::from_ref_time(11_655_000) // Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(8_787_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize_named(s: u32) -> Weight {
		Weight::from_ref_time(11_419_000) // Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(8_051_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}

	fn on_initialize(s: u32) -> Weight {
		Weight::from_ref_time(11_450_000) // Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(7_029_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn schedule(s: u32) -> Weight {
		Weight::from_ref_time(17_364_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(18_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn cancel(s: u32) -> Weight {
		Weight::from_ref_time(17_152_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(1_189_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn schedule_named(s: u32) -> Weight {
		Weight::from_ref_time(20_904_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(57_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn cancel_named(s: u32) -> Weight {
		Weight::from_ref_time(19_478_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(1_231_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}
