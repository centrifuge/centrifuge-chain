//! Autogenerated weights for pallet_vesting
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_vesting
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_vesting.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_vesting::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_vesting using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn vest_locked(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(31_215_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(31_000).saturating_mul(l as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(63_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn vest_unlocked(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(29_996_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(42_000).saturating_mul(l as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(48_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn vest_other_locked(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(30_457_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(45_000).saturating_mul(l as u64)) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(78_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn vest_other_unlocked(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(30_803_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(36_000).saturating_mul(l as u64)) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(36_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn vested_transfer(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(45_918_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(33_000).saturating_mul(l as u64)) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(54_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn force_vested_transfer(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(45_564_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(29_000).saturating_mul(l as u64)) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(45_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}

	fn not_unlocking_merge_schedules(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(31_824_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(37_000).saturating_mul(l as u64)) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(78_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}

	fn unlocking_merge_schedules(l: u32, s: u32) -> Weight {
		Weight::from_ref_time(31_926_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(40_000).saturating_mul(l as u64)) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(73_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
}
