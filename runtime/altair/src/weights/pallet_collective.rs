//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-25, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_collective
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_collective.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_collective::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_collective using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn set_members(m: u32, n: u32, p: u32) -> Weight {
		(0 as Weight) // Standard Error: 17_000
			.saturating_add((17_368_000 as Weight).saturating_mul(m as Weight)) // Standard Error: 17_000
			.saturating_add((266_000 as Weight).saturating_mul(n as Weight)) // Standard Error: 17_000
			.saturating_add((25_116_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(p as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(p as Weight)))
	}
	fn execute(b: u32, m: u32) -> Weight {
		(32_980_000 as Weight) // Standard Error: 0
			.saturating_add((4_000 as Weight).saturating_mul(b as Weight)) // Standard Error: 0
			.saturating_add((62_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	fn propose_execute(b: u32, m: u32) -> Weight {
		(38_799_000 as Weight) // Standard Error: 0
			.saturating_add((4_000 as Weight).saturating_mul(b as Weight)) // Standard Error: 0
			.saturating_add((118_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
	}
	fn propose_proposed(b: u32, m: u32, p: u32) -> Weight {
		(44_735_000 as Weight) // Standard Error: 0
			.saturating_add((19_000 as Weight).saturating_mul(b as Weight)) // Standard Error: 7_000
			.saturating_add((60_000 as Weight).saturating_mul(m as Weight)) // Standard Error: 7_000
			.saturating_add((579_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn vote(m: u32) -> Weight {
		(69_154_000 as Weight) // Standard Error: 5_000
			.saturating_add((226_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn close_early_disapproved(m: u32, p: u32) -> Weight {
		(59_635_000 as Weight) // Standard Error: 4_000
			.saturating_add((162_000 as Weight).saturating_mul(m as Weight)) // Standard Error: 3_000
			.saturating_add((439_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn close_early_approved(b: u32, m: u32, p: u32) -> Weight {
		(64_725_000 as Weight) // Standard Error: 0
			.saturating_add((16_000 as Weight).saturating_mul(b as Weight)) // Standard Error: 4_000
			.saturating_add((226_000 as Weight).saturating_mul(m as Weight)) // Standard Error: 4_000
			.saturating_add((575_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn close_disapproved(m: u32, p: u32) -> Weight {
		(67_077_000 as Weight) // Standard Error: 4_000
			.saturating_add((157_000 as Weight).saturating_mul(m as Weight)) // Standard Error: 4_000
			.saturating_add((444_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn close_approved(b: u32, m: u32, p: u32) -> Weight {
		(74_291_000 as Weight) // Standard Error: 0
			.saturating_add((16_000 as Weight).saturating_mul(b as Weight)) // Standard Error: 6_000
			.saturating_add((186_000 as Weight).saturating_mul(m as Weight)) // Standard Error: 6_000
			.saturating_add((610_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn disapprove_proposal(p: u32) -> Weight {
		(36_819_000 as Weight) // Standard Error: 3_000
			.saturating_add((514_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
