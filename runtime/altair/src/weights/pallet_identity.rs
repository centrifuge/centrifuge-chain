//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 1024

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// pallet
// --chain=altair-dev
// --steps=50
// --repeat=20
// --pallet=pallet_identity
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=/tmp/runtime/altair/src/weights/pallet_identity.rs
// --template=./scripts/runtime-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use pallet_identity::weights::WeightInfo;
use sp_std::marker::PhantomData;

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn add_registrar(r: u32) -> Weight {
		Weight::from_ref_time(15_342_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(100_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn set_identity(r: u32, x: u32) -> Weight {
		Weight::from_ref_time(29_187_000) // Standard Error: 8_000
			.saturating_add(Weight::from_ref_time(105_000).saturating_mul(r as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(301_000).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn set_subs_new(s: u32) -> Weight {
		Weight::from_ref_time(23_960_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(2_452_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}

	fn set_subs_old(p: u32) -> Weight {
		Weight::from_ref_time(23_931_000) // Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(1_067_000).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}

	fn clear_identity(r: u32, s: u32, x: u32) -> Weight {
		Weight::from_ref_time(28_187_000) // Standard Error: 9_000
			.saturating_add(Weight::from_ref_time(122_000).saturating_mul(r as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(1_067_000).saturating_mul(s as u64)) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(163_000).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}

	fn request_judgement(r: u32, x: u32) -> Weight {
		Weight::from_ref_time(30_668_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(63_000).saturating_mul(r as u64)) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(313_000).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn cancel_request(r: u32, x: u32) -> Weight {
		Weight::from_ref_time(26_962_000) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(92_000).saturating_mul(r as u64)) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(317_000).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn set_fee(r: u32) -> Weight {
		Weight::from_ref_time(8_274_000) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(84_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn set_account_id(r: u32) -> Weight {
		Weight::from_ref_time(8_235_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(81_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn set_fields(r: u32) -> Weight {
		Weight::from_ref_time(8_268_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(69_000).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn provide_judgement(r: u32, x: u32) -> Weight {
		Weight::from_ref_time(20_406_000) // Standard Error: 3_000
			.saturating_add(Weight::from_ref_time(40_000).saturating_mul(r as u64)) // Standard Error: 0
			.saturating_add(Weight::from_ref_time(312_000).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn kill_identity(r: u32, s: u32, _x: u32) -> Weight {
		Weight::from_ref_time(40_802_000) // Standard Error: 20_000
			.saturating_add(Weight::from_ref_time(250_000).saturating_mul(r as u64)) // Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(1_098_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}

	fn add_sub(s: u32) -> Weight {
		Weight::from_ref_time(32_117_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(47_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn rename_sub(s: u32) -> Weight {
		Weight::from_ref_time(13_207_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(25_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	fn remove_sub(s: u32) -> Weight {
		Weight::from_ref_time(34_259_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(28_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}

	fn quit_sub(s: u32) -> Weight {
		Weight::from_ref_time(24_418_000) // Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(30_000).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}
