[badges]
travis-ci = { repository = "centrifuge/centrifuge-chain", branch = "main" }
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "centrifuge/centrifuge-chain" }
is-it-maintained-open-issues = { repository = "centrifuge/centrifuge-chain" }

[package]
name = "centrifuge-chain"
version = "0.10.39"
description = "Centrifuge chain implementation in Rust."
build = "build.rs"
default-run = "centrifuge-chain"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
documentation.workspace = true

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[dependencies]
async-trait = { workspace = true, default-features = true }
clap = { workspace = true, default-features = true }
futures = { workspace = true, default-features = true }
hex-literal = { workspace = true, default-features = true }
jsonrpsee = { workspace = true, default-features = true }
log = { workspace = true, default-features = true }
parity-scale-codec = { default-features = true, workspace = true }
serde = { workspace = true, default-features = true }
url = { workspace = true, default-features = true }

# client dependencies
pallet-transaction-payment-rpc = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }
sc-cli = { workspace = true, default-features = true, features = ["rocksdb"] }
sc-client-api = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-consensus-aura = { workspace = true, default-features = true }
sc-consensus-grandpa = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-network-sync = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true, features = ["rocksdb"] }
sc-sysinfo = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sc-tracing = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-consensus-aura = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-offchain = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-session = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
sp-transaction-pool = { workspace = true, default-features = true }
substrate-frame-rpc-system = { workspace = true, default-features = true }
substrate-prometheus-endpoint = { workspace = true, default-features = true }

# Cli specific
frame-benchmarking = { workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true, default-features = true, features = ["rocksdb"] }

# Cumulus
cumulus-client-cli = { workspace = true, default-features = true }
cumulus-client-collator = { workspace = true, default-features = true }
cumulus-client-consensus-aura = { workspace = true, default-features = true }
cumulus-client-consensus-common = { workspace = true, default-features = true }
cumulus-client-consensus-proposer = { workspace = true, default-features = true }
cumulus-client-network = { workspace = true, default-features = true }
cumulus-client-service = { workspace = true, default-features = true }
cumulus-pallet-session-benchmarking = { workspace = true, default-features = true }
cumulus-primitives-core = { workspace = true, default-features = true }
cumulus-primitives-parachain-inherent = { workspace = true, default-features = true }
cumulus-relay-chain-inprocess-interface = { workspace = true, default-features = true }
cumulus-relay-chain-interface = { workspace = true, default-features = true }

# Polkadot
polkadot-cli = { workspace = true, default-features = true }
polkadot-primitives = { workspace = true, default-features = true }
polkadot-service = { workspace = true, default-features = true }
staging-xcm = { workspace = true, default-features = true }

# Local
altair-runtime = { workspace = true, default-features = true }
centrifuge-runtime = { workspace = true, default-features = true }
cfg-primitives = { workspace = true, default-features = true }
cfg-types = { workspace = true, default-features = true }
cfg-utils = { workspace = true, default-features = true }
development-runtime = { workspace = true, default-features = true }
pallet-anchors = { workspace = true, default-features = true }
pallet-pool-system = { workspace = true, default-features = true }
runtime-common = { workspace = true, default-features = true }

# frontier
fc-consensus = { workspace = true, default-features = true }
fc-db = { workspace = true, default-features = true, features = ["rocksdb"] }
fc-mapping-sync = { workspace = true, default-features = true }
fc-rpc = { workspace = true, default-features = true }
fc-rpc-core = { workspace = true, default-features = true }
fp-consensus = { workspace = true, default-features = true }
fp-dynamic-fee = { workspace = true, default-features = true }
fp-evm = { workspace = true, default-features = true }
fp-rpc = { workspace = true, default-features = true }
fp-storage = { workspace = true, default-features = true }
pallet-ethereum = { workspace = true, default-features = true }
pallet-evm = { workspace = true, default-features = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = true }
vergen = { workspace = true, default-features = true }

[features]
default = []
runtime-benchmarks = [
  "altair-runtime/runtime-benchmarks",
  "centrifuge-runtime/runtime-benchmarks",
  "cfg-primitives/runtime-benchmarks",
  "cfg-types/runtime-benchmarks",
  "cfg-utils/runtime-benchmarks",
  "cumulus-pallet-session-benchmarking/runtime-benchmarks",
  "development-runtime/runtime-benchmarks",
  "frame-benchmarking-cli/runtime-benchmarks",
  "frame-benchmarking/runtime-benchmarks",
  "pallet-anchors/runtime-benchmarks",
  "pallet-ethereum/runtime-benchmarks",
  "pallet-evm/runtime-benchmarks",
  "pallet-pool-system/runtime-benchmarks",
  "polkadot-cli/runtime-benchmarks",
  "polkadot-primitives/runtime-benchmarks",
  "polkadot-service/runtime-benchmarks",
  "runtime-common/runtime-benchmarks",
  "sc-service/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
]
try-runtime = [
  "altair-runtime/try-runtime",
  "centrifuge-runtime/try-runtime",
  "cfg-primitives/try-runtime",
  "cfg-types/try-runtime",
  "cfg-utils/try-runtime",
  "development-runtime/try-runtime",
  "pallet-anchors/try-runtime",
  "pallet-ethereum/try-runtime",
  "pallet-evm/try-runtime",
  "pallet-pool-system/try-runtime",
  "polkadot-cli/try-runtime",
  "polkadot-service/try-runtime",
  "runtime-common/try-runtime",
  "sp-runtime/try-runtime",
]
fast-runtime = [
  "altair-runtime/fast-runtime",
  "centrifuge-runtime/fast-runtime",
  "development-runtime/fast-runtime",
]
