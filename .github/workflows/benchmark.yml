name: Benchmark
on:
  issue_comment:
    types: [created]
jobs:
  validate-comment:
    name: Validate Comment
    runs-on: ubuntu-latest-4-cores
    outputs:
      result: ${{ steps.validate.outputs.result }}
    steps:
    - name: validate
      id: validate
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          console.log("comment body", context.payload.comment.body)
          console.log("comment author role", context.payload.comment.author_association)
          console.log("Is Pull Request", context.payload.issue.pull_request)
          if (context.payload.comment.body.includes('/benchmark ') && context.payload.issue.pull_request && context.payload.comment.author_association.includes('MEMBER')) {
            return 'valid'
          }
  benchmark:
    name: benchmark
    runs-on: ubuntu-latest-4-cores
    needs: 'validate-comment'
    if: ${{ needs.validate-comment.outputs.result == 'valid' }}
    env:
      RUST_TOOLCHAIN: "nightly-2022-08-05"
    steps:
      - name: Free space on Ubuntu
        run: |
          echo "Pre cleanup"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Post cleanup"
          df -h
      - name: Check out code
        uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
      - uses: actions/github-script@v6
        name: Parse Runtime From Comment
        id: parse-runtime
        with:
          result-encoding: string
          script: |
            console.log("test1", context.payload.comment.body)
            const [, , , runtime] = context.payload.comment.body.split(/\W+/)
            if (!['centrifuge', 'altair'].includes(runtime)) throw new Error('Unsupported Runtime')
            return `${runtime}`
      - name: Run Benchmark centrifuge
        run: ./ci/script.sh
        env:
          TARGET: benchmark
          RUNTIME: ${{steps.parse-runtime.outputs.result}}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{steps.parse-runtime.outputs.result}}-weights
          path: runtime/${{steps.parse-runtime.outputs.result}}/src/weights/