on:
  push:
    branches: [main, 'release-v**']
  pull_request:
    paths:
      - 'src/'
      - '.github/workflows/tests.yml'
name: Tests
concurrency:
  group: 'tests-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  linter:
    name: lint-${{ matrix.target }}
    env:
      RUST_TOOLCHAIN: "nightly-2022-11-14"
      # SCCACHE_GHA_ENABLED: "true"
      # RUSTC_WRAPPER: "sccache"
      RUST_MIN_STACK: 8388608
    strategy:
      matrix:
        target: [fmt, clippy]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # 3.5.2

      - name: Prep build on Ubuntu
        uses: ./.github/actions/prep-ubuntu
        with:
          RUST_TOOLCHAIN: ${{ env.RUST_TOOLCHAIN }}        

      - uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4 # 2.6.2
        with:
          prefix-key: cache
          shared-key: cargo-linters
             
      # - name: Run sccache-cache
      #   uses: mozilla-actions/sccache-action@v0.0.3

      - name: Run ${{ matrix.target }} linter
        shell: bash
        run: |
          if ${{ matrix.target == 'fmt'}} ; then
            cargo fmt -- --check
          elif ${{ matrix.target == 'clippy'}}; then
            cargo clippy --workspace -- \
              -D warnings -A clippy::unnecessary-cast \
              -A clippy::bool-to-int-with-if
          fi

      # - name: Run sccache stat for check
      #   shell: bash
      #   run: ${SCCACHE_PATH} --show-stats


  tests:
    name: ${{ matrix.target }}-tests
    strategy:
      matrix:
        target: [general, integration]
    runs-on: ubuntu-latest
    env:
      RUST_TOOLCHAIN: "nightly-2022-11-14"
      # SCCACHE_GHA_ENABLED: "true"
      # RUSTC_WRAPPER: "sccache"
    steps:
      - name: Check out code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #3.5.2

      - name: Prep build on Ubuntu
        uses: ./.github/actions/prep-ubuntu
        with:
          RUST_TOOLCHAIN: ${{ env.RUST_TOOLCHAIN }}

      - name: Swatinem rust cache setup
        uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191 # 2.6.0
        with:
          prefix-key: cache
          shared-key: cargo-tests
          # cache-on-failure: "true"
          # save-if: ${{ github.ref == 'refs/heads/master' }}

      # - name: Run sccache-cache
      #   uses: mozilla-actions/sccache-action@v0.0.3

      - name: runtime-benchmarks and try-runtime
        if: ${{ matrix.target == 'general' }}
        run: |
          cargo test --workspace --release \
            --features runtime-benchmarks,try-runtime \
            --exclude runtime-integration-tests

      - name: fast-runtime integration tests
        if: ${{ matrix.target == 'integration' }}
        run: |
          cargo test --release \
            --features fast-runtime \
            --package runtime-integration-tests

      # - name: Run sccache stat for check
      #   shell: bash
      #   run: ${SCCACHE_PATH} --show-stats

      # - name: Run tests
      #   run: ./ci/script.sh
      #   env:
      #     TARGET: ${{ matrix.target }}