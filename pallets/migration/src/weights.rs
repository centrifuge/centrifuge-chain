//! Autogenerated weights for pallet_migration_manager
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-08-10, STEPS: `[100, ]`, REPEAT: 200, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("altair-dev"), DB CACHE: 128

// Executed Command:
// target/release/centrifuge-chain
// benchmark
// --chain=altair-dev
// --steps=100
// --repeat=200
// --pallet=pallet-migration-manager
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=pallets/migration/src/weight.rs
// --template=./scripts/frame-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_migration_manager.
pub trait WeightInfo {
	fn migrate_system_account(n: u32) -> Weight;
	fn migrate_balances_issuance() -> Weight;
	fn migrate_vesting_vesting(n: u32) -> Weight;
	fn migrate_proxy_proxies(n: u32) -> Weight;
}

/// Weights for pallet_migration_manager using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn migrate_system_account(n: u32) -> Weight {
		(25_196_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_795_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
	fn migrate_balances_issuance() -> Weight {
		(31_000_000 as Weight)
	}
	fn migrate_vesting_vesting(n: u32) -> Weight {
		(41_729_000 as Weight)
			// Standard Error: 42_000
			.saturating_add((72_082_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().reads((3 as Weight).saturating_mul(n as Weight)))
			.saturating_add(T::DbWeight::get().writes((3 as Weight).saturating_mul(n as Weight)))
	}
	fn migrate_proxy_proxies(n: u32) -> Weight {
		(34_869_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((14_860_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn migrate_system_account(n: u32) -> Weight {
		(25_196_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_795_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
	fn migrate_balances_issuance() -> Weight {
		(31_000_000 as Weight)
	}
	fn migrate_vesting_vesting(n: u32) -> Weight {
		(41_729_000 as Weight)
			// Standard Error: 42_000
			.saturating_add((72_082_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(RocksDbWeight::get().reads((3 as Weight).saturating_mul(n as Weight)))
			.saturating_add(RocksDbWeight::get().writes((3 as Weight).saturating_mul(n as Weight)))
	}
	fn migrate_proxy_proxies(n: u32) -> Weight {
		(34_869_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((14_860_000 as Weight).saturating_mul(n as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(n as Weight)))
	}
}
